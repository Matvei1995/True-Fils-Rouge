{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignUpScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleSignUp = function handleSignUp() {\n    axios.post('http://localhost:5000/api/register', {\n      name: name,\n      email: email,\n      password: password\n    }).then(function (response) {\n      Alert.alert('Success', response.data);\n    }).catch(function (error) {\n      Alert.alert('Error', error.message);\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Sign Up\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Name\",\n      value: name,\n      onChangeText: setName\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSignUp,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Register\"\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: '#007BFF',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","TextInput","TouchableOpacity","View","Alert","axios","jsx","_jsx","jsxs","_jsxs","SignUpScreen","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleSignUp","post","then","response","alert","data","catch","error","message","style","styles","container","children","title","input","placeholder","value","onChangeText","keyboardType","secureTextEntry","button","onPress","buttonText","create","flex","justifyContent","paddingHorizontal","fontSize","marginBottom","textAlign","borderWidth","borderColor","padding","borderRadius","backgroundColor","alignItems","color"],"sources":["/Users/matveitabelev/Desktop/TROQUANTE/MonProjet/components/SignUpScreen.jsx"],"sourcesContent":["// src/components/SignUpScreen.js\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View, Alert } from 'react-native';\nimport axios from 'axios';\n\nexport function SignUpScreen(){\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSignUp = () => {\n    axios.post('http://localhost:5000/api/register', {\n      name,\n      email,\n      password,\n    })\n    .then(response => {\n      Alert.alert('Success', response.data);\n    })\n    .catch(error => {\n      Alert.alert('Error', error.message);\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Sign Up</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Name\"\n        value={name}\n        onChangeText={setName}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={setEmail}\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n      />\n      <TouchableOpacity style={styles.button} onPress={handleSignUp}>\n        <Text style={styles.buttonText}>Register</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  button: {\n    backgroundColor: '#007BFF',\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}