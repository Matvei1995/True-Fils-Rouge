{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignInScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (name === '' || email === '' || password === '') {\n        alert(\"All fields are required\");\n        return;\n      }\n      yield axios.post(\"http://localhost:8001/api/signin\", {\n        name: name,\n        email: email,\n        password: password\n      });\n      alert(\"Sign In Successful\");\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAwareScrollView, {\n    contentCotainerStyle: styles.container,\n    children: _jsxs(View, {\n      style: {\n        marginVertical: 100\n      },\n      children: [_jsx(View, {\n        style: styles.imageContainer,\n        children: _jsx(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: styles.imageStyles\n        })\n      }), _jsx(Text, {\n        style: styles.signupText,\n        children: \"Sign In\"\n      }), _jsxs(View, {\n        style: {\n          marginHorizontal: 24\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16,\n            color: '#8e93a1'\n          },\n          children: \"EMAIL\"\n        }), _jsx(TextInput, {\n          style: styles.signupInput,\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          autoCompleteType: \"email\",\n          keyboardType: \"email-address\"\n        })]\n      }), _jsxs(View, {\n        style: {\n          marginHorizontal: 24\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 16,\n            color: '#8e93a1'\n          },\n          children: \"PASSWORD\"\n        }), _jsx(TextInput, {\n          style: styles.signupInput,\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          secureTextEntry: true,\n          autoComplteType: \"password\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSubmit,\n        style: styles.buttonStyle,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Submit\"\n        })\n      }), _jsx(Text, {\n        style: {\n          fontSize: 12,\n          textAlign: 'center'\n        },\n        children: \"Not yet registered? Sign Up\"\n      }), _jsx(Text, {\n        style: {\n          fontSize: 12,\n          textAlign: 'center',\n          marginTop: 10\n        },\n        children: \"Forgot Password?\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  signupText: {\n    fontSize: 30,\n    textAlign: 'center'\n  },\n  signupInput: {\n    borderBottomWidth: 0.5,\n    height: 48,\n    borderBottomColor: \"#8e93a1\",\n    marginBottom: 30\n  },\n  buttonStyle: {\n    backgroundColor: \"darkmagenta\",\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    marginHorizontal: 15,\n    borderRadius: 15\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    color: '#fff',\n    textTransform: 'uppercase',\n    fontWeight: 'bold'\n  },\n  imageContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  imageStyles: {\n    width: 100,\n    height: 100,\n    marginVertical: 20\n  }\n});","map":{"version":3,"names":["React","useState","KeyboardAwareScrollView","jsx","_jsx","jsxs","_jsxs","SignInScreen","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleSubmit","_ref","_asyncToGenerator","alert","axios","post","apply","arguments","contentCotainerStyle","styles","container","children","View","style","marginVertical","imageContainer","Image","source","require","imageStyles","Text","signupText","marginHorizontal","fontSize","color","TextInput","signupInput","value","onChangeText","text","autoCompleteType","keyboardType","secureTextEntry","autoComplteType","TouchableOpacity","onPress","buttonStyle","buttonText","textAlign","marginTop","StyleSheet","create","flex","justifyContent","borderBottomWidth","height","borderBottomColor","marginBottom","backgroundColor","borderRadius","textTransform","fontWeight","alignItems","width"],"sources":["/Users/matveitabelev/Desktop/TROQUANTE/MonProjet/components/SignInScreen.jsx"],"sourcesContent":["import { StyleSheet, Text, View, TextInput, TouchableOpacity, Image } from 'react-native'\nimport React, { useState } from 'react'\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\n\nexport function SignInScreen (){\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const handleSubmit = async () => {\n        if (name === '' || email === '' || password === '') {\n            alert(\"All fields are required\");\n            return;\n        }\n        await axios.post(\"http://localhost:8001/api/signin\", { name, email, password });\n        alert(\"Sign In Successful\");\n    };\n    return (\n        <KeyboardAwareScrollView contentCotainerStyle={styles.container}>\n            <View style={{ marginVertical: 100 }}>\n            <View style={styles.imageContainer}>\n                <Image source={require(\"../assets/logo.png\")} style={styles.imageStyles} />\n            </View>\n                <Text style={styles.signupText}>Sign In</Text>\n                <View style={{ marginHorizontal: 24 }}>\n                    <Text style={{ fontSize: 16, color: '#8e93a1' }}>EMAIL</Text>\n                    <TextInput style={styles.signupInput} value={email} onChangeText={text => setEmail(text)} autoCompleteType=\"email\" keyboardType=\"email-address\" />\n                </View>\n                <View style={{ marginHorizontal: 24 }}>\n                    <Text style={{ fontSize: 16, color: '#8e93a1' }}>PASSWORD</Text>\n                    <TextInput style={styles.signupInput} value={password} onChangeText={text => setPassword(text)} secureTextEntry={true} autoComplteType=\"password\" />\n                </View>\n                <TouchableOpacity onPress={handleSubmit} style={styles.buttonStyle}>\n                    <Text style={styles.buttonText}>Submit</Text>\n                </TouchableOpacity>\n                <Text style={{ fontSize: 12, textAlign: 'center' }}>Not yet registered? Sign Up</Text>\n                <Text style={{ fontSize: 12, textAlign: 'center', marginTop: 10 }}>Forgot Password?</Text>\n            </View>\n        </KeyboardAwareScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center'\n    },\n    signupText: {\n        fontSize: 30,\n        textAlign: 'center'\n    },\n    signupInput: {\n        borderBottomWidth: 0.5,\n        height: 48,\n        borderBottomColor: \"#8e93a1\",\n        marginBottom: 30,\n    },\n    buttonStyle: {\n        backgroundColor: \"darkmagenta\",\n        height: 50,\n        marginBottom: 20,\n        justifyContent: \"center\",\n        marginHorizontal: 15,\n        borderRadius: 15,\n    },\n    buttonText: {\n        fontSize: 20,\n        textAlign: 'center',\n        color: '#fff',\n        textTransform: 'uppercase',\n        fontWeight: 'bold'\n    },\n    imageContainer: { justifyContent: \"center\", alignItems: \"center\" },\n    imageStyles: { width: 100, height: 100, marginVertical: 20 }\n})\n\n\n\n// SignInScreen.js\n// import React from 'react';\n// import { View, Text, TextInput, Button } from 'react-native';\n\n\n// export function SignInScreen () {\n//   // Logique de connexion ici\n//   return (\n//     <View>\n//       <Text>Se connecter</Text>\n//       <TextInput placeholder=\"Email\" />\n//       <TextInput placeholder=\"Mot de passe\" secureTextEntry={true} />\n//       <Button title=\"Se connecter\" onPress={() => {/* Logique de connexion */}} />\n//     </View>\n//   );\n// };\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}