{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport { globalStyles } from \"../Style/globalFont\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ProfileScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState({\n      name: '',\n      city: '',\n      email: '',\n      profileImage: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    profile = _useState2[0],\n    setProfile = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    articles = _useState4[0],\n    setArticles = _useState4[1];\n  useEffect(function () {\n    var fetchProfileData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get('http://localhost:5001/api/users/profile', {\n            headers: {\n              Authorization: `Bearer ${route.params.token}`\n            }\n          });\n          setProfile(response.data);\n          var articlesResponse = yield axios.get(`http://localhost:5001/api/articles/user/${response.data.id}`);\n          setArticles(articlesResponse.data);\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données :', error);\n        }\n      });\n      return function fetchProfileData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchProfileData();\n  }, []);\n  return _jsxs(View, {\n    style: [styles.container, globalStyles.text],\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Mon Profil\"\n      }), _jsxs(View, {\n        style: styles.icons,\n        children: [_jsx(TouchableOpacity, {\n          children: _jsx(Ionicons, {\n            name: \"settings-outline\",\n            size: 24,\n            color: \"black\"\n          })\n        }), _jsx(TouchableOpacity, {\n          children: _jsx(Ionicons, {\n            name: \"information-circle-outline\",\n            size: 24,\n            color: \"black\"\n          })\n        })]\n      })]\n    }), _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContent,\n      children: [_jsxs(View, {\n        style: styles.profileInfo,\n        children: [profile.profileImage ? _jsx(Image, {\n          source: {\n            uri: profile.profileImage\n          },\n          style: styles.profilePic\n        }) : _jsx(Image, {\n          source: require(\"../assets/profile-pic.jpg\"),\n          style: styles.profilePic\n        }), _jsxs(View, {\n          style: styles.profileDetails,\n          children: [_jsx(Text, {\n            style: styles.name,\n            children: profile.name\n          }), _jsx(Text, {\n            style: styles.city,\n            children: profile.city\n          }), _jsxs(View, {\n            style: styles.stats,\n            children: [_jsxs(View, {\n              style: styles.statItem,\n              children: [_jsx(Text, {\n                style: styles.statNumber,\n                children: \"0\"\n              }), _jsx(Text, {\n                style: styles.statLabel,\n                children: \"Troc\"\n              })]\n            }), _jsxs(View, {\n              style: styles.statItem,\n              children: [_jsx(Text, {\n                style: styles.statNumber,\n                children: \"0\"\n              }), _jsx(Text, {\n                style: styles.statLabel,\n                children: \"Objet\"\n              })]\n            }), _jsxs(View, {\n              style: styles.statItem,\n              children: [_jsx(Text, {\n                style: styles.statNumber,\n                children: articles.length\n              }), \" \", _jsx(Text, {\n                style: styles.statLabel,\n                children: \"Enregistr\\xE9s\"\n              })]\n            })]\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.articlesGrid,\n        children: articles.map(function (article, index) {\n          return _jsx(View, {\n            style: styles.articleCard\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Modifier le profil\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"D\\xE9connexion\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Supprimer mon profil\"\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.bottomNavBar\n    })]\n  });\n}\n;","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","StyleSheet","ScrollView","TouchableOpacity","axios","globalStyles","Ionicons","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_ref","route","navigation","_useState","name","city","email","profileImage","_useState2","_slicedToArray","profile","setProfile","_useState3","_useState4","articles","setArticles","fetchProfileData","_ref2","_asyncToGenerator","response","get","headers","Authorization","params","token","data","articlesResponse","id","error","console","apply","arguments","style","styles","container","text","children","header","title","icons","size","color","contentContainerStyle","scrollContent","profileInfo","source","uri","profilePic","require","profileDetails","stats","statItem","statNumber","statLabel","length","articlesGrid","map","article","index","articleCard","buttonContainer","button","buttonText","bottomNavBar"],"sources":["/Users/matveitabelev/Desktop/TROQUANTE/MonProjet/components/ProfileScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, Image, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\nimport { globalStyles } from '../Style/globalFont';\nimport { Ionicons } from '@expo/vector-icons'; \n\nexport function ProfileScreen({ route, navigation }) {\n  const [profile, setProfile] = useState({\n    name: '',\n    city: '',\n    email: '',\n    profileImage: null, \n  });\n  const [articles, setArticles] = useState([]); // Pour stocker les articles\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/users/profile', {\n          headers: { Authorization: `Bearer ${route.params.token}` },\n        });\n        setProfile(response.data);\n\n        // Récupération des articles associés au profil\n        const articlesResponse = await axios.get(`http://localhost:5001/api/articles/user/${response.data.id}`);\n        setArticles(articlesResponse.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données :', error);\n      }\n    };\n\n    fetchProfileData();\n  }, []);\n\n  return (\n    <View style={[styles.container,globalStyles.text]}>\n      {/* Header */}\n      <View style={styles.header}>\n        <Text style={styles.title}>Mon Profil</Text>\n        <View style={styles.icons}>\n          <TouchableOpacity>\n            <Ionicons name=\"settings-outline\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <TouchableOpacity>\n            <Ionicons name=\"information-circle-outline\" size={24} color=\"black\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        {/* Informations du profil */}\n        <View style={styles.profileInfo}>\n          {profile.profileImage ? (\n            <Image source={{ uri: profile.profileImage }} style={styles.profilePic} />\n          ) : (\n            <Image source={require('../assets/profile-pic.jpg')} style={styles.profilePic} />\n          )}\n          <View style={styles.profileDetails}>\n            <Text style={styles.name}>{profile.name}</Text>\n            <Text style={styles.city}>{profile.city}</Text>\n            <View style={styles.stats}>\n              <View style={styles.statItem}>\n                <Text style={styles.statNumber}>0</Text>\n                <Text style={styles.statLabel}>Troc</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statNumber}>0</Text>\n                <Text style={styles.statLabel}>Objet</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statNumber}>{articles.length}</Text> {/* Nombre d'articles */}\n                <Text style={styles.statLabel}>Enregistrés</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        {/* Articles */}\n        <View style={styles.articlesGrid}>\n          {articles.map((article, index) => (\n            <View key={index} style={styles.articleCard}>\n              {/* Vous pouvez afficher les informations de l'article ici (image, titre, etc.) */}\n            </View>\n          ))}\n        </View>\n\n        {/* Boutons */}\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity style={styles.button}>\n            <Text style={styles.buttonText}>Modifier le profil</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button}>\n            <Text style={styles.buttonText}>Déconnexion</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.button}>\n            <Text style={styles.buttonText}>Supprimer mon profil</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n\n      {/* Barre de navigation inférieure */}\n      <View style={styles.bottomNavBar}>\n        {/* ... (vos icônes de navigation) */}\n      </View>\n    </View>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}