{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from 'axios';\nimport { globalStyles } from \"../Style/globalFont\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errorMessage = _useState6[0],\n    setErrorMessage = _useState6[1];\n  var handleSignIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post('http://localhost:5001/api/users/login', {\n          email: email,\n          password: password\n        });\n        var user = response.data.user;\n        navigation.navigate('ProfileScreen', {\n          user: user\n        });\n      } catch (error) {\n        setErrorMessage('Email ou mot de passe incorrect');\n        console.error(error);\n      }\n    });\n    return function handleSignIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: [styles.container, globalStyles.text],\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Connexion\"\n    }), _jsx(Image, {\n      source: require(\"../assets/logo.png\"),\n      style: styles.logo\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"EMAIL\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        keyboardType: \"email-address\",\n        autoCapitalize: \"none\"\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"MOT DE PASSE\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Mot de passe\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true\n      })]\n    }), errorMessage ? _jsx(Text, {\n      style: styles.errorText,\n      children: errorMessage\n    }) : null, _jsx(Pressable, {\n      style: styles.button,\n      onPress: handleSignIn,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Connexion\"\n      })\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#A0AE88',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  title: {\n    fontFamily: 'Rowdies',\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 30\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 40\n  },\n  inputContainer: {\n    width: '100%',\n    marginBottom: 15\n  },\n  label: {\n    fontFamily: 'Rowdies',\n    fontSize: 16,\n    color: '#FFFFFF',\n    marginBottom: 5\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    height: 40,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    fontFamily: 'Rowdies'\n  },\n  button: {\n    backgroundColor: '#6E745C',\n    paddingVertical: 15,\n    paddingHorizontal: 40,\n    borderRadius: 10,\n    marginTop: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontFamily: 'Rowdies',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 15\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Pressable","Image","StyleSheet","Text","axios","globalStyles","jsx","_jsx","jsxs","_jsxs","SignInScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorMessage","setErrorMessage","handleSignIn","_ref2","_asyncToGenerator","response","post","user","data","navigate","error","console","apply","arguments","style","styles","container","text","children","title","source","require","logo","inputContainer","label","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","errorText","button","onPress","buttonText","create","flex","backgroundColor","alignItems","justifyContent","paddingHorizontal","fontFamily","fontSize","fontWeight","color","marginBottom","width","height","borderRadius","paddingVertical","marginTop"],"sources":["/Users/matveitabelev/Desktop/TROQUANTE/MonProjet/components/SignInScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, Pressable, Image, StyleSheet, Text } from 'react-native';\nimport axios from 'axios';\nimport { globalStyles } from '../Style/globalFont';\n\nexport function SignInScreen({ navigation }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(''); // Ajoutez cet état pour le message d'erreur\n\n  const handleSignIn = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/api/users/login', { email, password });\n      const user = response.data.user;\n      navigation.navigate('ProfileScreen', { user }); // Passe l'objet user directement\n    } catch (error) {\n      setErrorMessage('Email ou mot de passe incorrect'); // Met à jour l'état du message d'erreur\n      console.error(error);\n    }\n  };\n\n  return (\n    <View style={[styles.container, globalStyles.text]}>\n      <Text style={styles.title}>Connexion</Text>\n      <Image \n        source={require('../assets/logo.png')} // Remplacez par le chemin de votre logo\n        style={styles.logo} \n      />\n\n      <View style={styles.inputContainer}>\n        <Text style={styles.label}>EMAIL</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Email\"\n          value={email}\n          onChangeText={setEmail}\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n        />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <Text style={styles.label}>MOT DE PASSE</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Mot de passe\"\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n        />\n      </View>\n\n      {errorMessage ? ( // Affiche le message d'erreur conditionnellement\n        <Text style={styles.errorText}>{errorMessage}</Text>\n      ) : null}\n\n      <Pressable style={styles.button} onPress={handleSignIn}>\n        <Text style={styles.buttonText}>Connexion</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#A0AE88',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n  },\n  title: {\n    fontFamily: 'Rowdies',\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF', // Assurez-vous d'utiliser la bonne couleur de texte\n    marginBottom: 30,\n  },\n  logo: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 40,\n  },\n  inputContainer: {\n    width: '100%',\n    marginBottom: 15,\n  },\n  label: {\n    fontFamily: 'Rowdies',\n    fontSize: 16,\n    color: '#FFFFFF',\n    marginBottom: 5,\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    height: 40,\n    borderRadius: 10,\n    paddingHorizontal: 10,\n    fontFamily: 'Rowdies',\n  },\n  button: {\n    backgroundColor: '#6E745C',\n    paddingVertical: 15,\n    paddingHorizontal: 40,\n    borderRadius: 10,\n    marginTop: 20,\n  },\n  buttonText: {\n    color: 'white',\n    fontFamily: 'Rowdies',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: 'red', \n    marginBottom: 15,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}