{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { WelcomeScreen } from \"./components/WelcomScreen\";\nimport { SignInScreen } from \"./components/SignInScreen\";\nimport { SignUpScreen } from \"./components/SignUpScreen\";\nimport { ProfileScreen } from \"./components/ProfileScreen\";\nimport { ConfirmationScreen } from \"./components/ConfirmationScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar styles = StyleSheet.create({\n  defaultText: {\n    fontFamily: 'Rowdies'\n  }\n});\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  useEffect(function () {\n    function loadFonts() {\n      return _loadFonts.apply(this, arguments);\n    }\n    function _loadFonts() {\n      _loadFonts = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'Rowdies': require(\"./assets/fonts/Rowdies-Regular.ttf\")\n        });\n        setFontsLoaded(true);\n      });\n      return _loadFonts.apply(this, arguments);\n    }\n    loadFonts();\n  }, []);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    screenOptions: {\n      headerShown: false,\n      contentStyle: styles.defaultText\n    },\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Welcome\",\n        component: WelcomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SignInScreen\",\n        component: SignInScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SignUpScreen\",\n        component: SignUpScreen\n      }), _jsx(Stack.Screen, {\n        name: \"ProfileScreen\",\n        component: ProfileScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Confirmation\",\n        component: ConfirmationScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Font","StyleSheet","Text","NavigationContainer","createStackNavigator","WelcomeScreen","SignInScreen","SignUpScreen","ProfileScreen","ConfirmationScreen","jsx","_jsx","jsxs","_jsxs","Stack","styles","create","defaultText","fontFamily","App","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","require","screenOptions","headerShown","contentStyle","children","Navigator","Screen","name","component","options"],"sources":["/Users/matveitabelev/Desktop/TROQUANTE/MonProjet/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport { StyleSheet, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { WelcomeScreen } from './components/WelcomScreen';\nimport { SignInScreen } from './components/SignInScreen';\nimport { SignUpScreen } from './components/SignUpScreen';\nimport { ProfileScreen } from './components/ProfileScreen';\nimport { ConfirmationScreen } from './components/ConfirmationScreen';\n\n\n\nconst Stack = createStackNavigator();\n\nconst styles = StyleSheet.create({\n  defaultText: {\n    fontFamily: 'Rowdies',\n  },\n});\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function loadFonts() {\n      await Font.loadAsync({\n        'Rowdies': require('./assets/fonts/Rowdies-Regular.ttf'), // Chemin vers votre fichier de police\n      });\n      setFontsLoaded(true);\n    }\n\n    loadFonts();\n  }, []);\n\n  if (!fontsLoaded) {\n    return null; // Ou un composant de chargement\n  }\n \n\n  return (\n    \n    <NavigationContainer screenOptions={{\n      headerShown: false, // Masquer l'en-tête par défaut de la navigation (optionnel)\n      contentStyle: styles.defaultText // Appliquer le style par défaut au contenu des écrans\n    }}>\n     \n      <Stack.Navigator>\n        <Stack.Screen name=\"Welcome\" component={WelcomeScreen} />\n        <Stack.Screen name=\"SignInScreen\"  component={SignInScreen} />\n        <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n        <Stack.Screen  name=\"ProfileScreen\" component={ProfileScreen}  options={{ headerShown: false } }/> \n        <Stack.Screen name=\"Confirmation\" component={ConfirmationScreen} />\n         \n      </Stack.Navigator>\n   \n     \n    </NavigationContainer>\n    \n  );\n\n\n\n\n  \n\n \n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,KAAKC,IAAI,MAAM,WAAW;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAElC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,aAAa;AACtB,SAASC,YAAY;AACrB,SAASC,YAAY;AACrB,SAASC,aAAa;AACtB,SAASC,kBAAkB;AAA0C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIrE,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AAEpC,IAAMW,MAAM,GAAGd,UAAU,CAACe,MAAM,CAAC;EAC/BC,WAAW,EAAE;IACXC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AACF,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsCtB,QAAQ,CAAC,KAAK,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElCtB,SAAS,CAAC,YAAM;IAAA,SACC0B,SAASA,CAAA;MAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,WAAA;MAAAA,UAAA,GAAAG,iBAAA,CAAxB,aAA2B;QACzB,MAAM7B,IAAI,CAAC8B,SAAS,CAAC;UACnB,SAAS,EAAEC,OAAO,qCAAqC;QACzD,CAAC,CAAC;QACFP,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC;MAAA,OAAAE,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAGA,OAEEZ,IAAA,CAACR,mBAAmB;IAAC6B,aAAa,EAAE;MAClCC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAEnB,MAAM,CAACE;IACvB,CAAE;IAAAkB,QAAA,EAEAtB,KAAA,CAACC,KAAK,CAACsB,SAAS;MAAAD,QAAA,GACdxB,IAAA,CAACG,KAAK,CAACuB,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAElC;MAAc,CAAE,CAAC,EACzDM,IAAA,CAACG,KAAK,CAACuB,MAAM;QAACC,IAAI,EAAC,cAAc;QAAEC,SAAS,EAAEjC;MAAa,CAAE,CAAC,EAC9DK,IAAA,CAACG,KAAK,CAACuB,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEhC;MAAa,CAAE,CAAC,EAC7DI,IAAA,CAACG,KAAK,CAACuB,MAAM;QAAEC,IAAI,EAAC,eAAe;QAACC,SAAS,EAAE/B,aAAc;QAAEgC,OAAO,EAAE;UAAEP,WAAW,EAAE;QAAM;MAAG,CAAC,CAAC,EAClGtB,IAAA,CAACG,KAAK,CAACuB,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAE9B;MAAmB,CAAE,CAAC;IAAA,CAEpD;EAAC,CAGC,CAAC;AAU1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}