{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'react-native-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var EditProfilePicture = function EditProfilePicture(_ref) {\n  var profileImage = _ref.profileImage,\n    onImageChange = _ref.onImageChange;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedImage = _useState2[0],\n    setSelectedImage = _useState2[1];\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 1\n      });\n      if (!result.canceled) {\n        setSelectedImage(result.assets[0].uri);\n        onImageChange(result.assets[0].uri);\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(TouchableOpacity, {\n      onPress: pickImage,\n      children: [_jsx(Image, {\n        source: selectedImage ? {\n          uri: selectedImage\n        } : profileImage,\n        style: styles.profilePic\n      }), _jsx(Text, {\n        style: styles.editLabel,\n        children: \"Modifier\"\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Image","StyleSheet","ImagePicker","jsx","_jsx","jsxs","_jsxs","EditProfilePicture","_ref","profileImage","onImageChange","_useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","pickImage","_ref2","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","assets","uri","apply","arguments","style","styles","container","children","onPress","source","profilePic","editLabel","create"],"sources":["/Users/matveitabelev/Desktop/TROQUANTE/MonProjet/components/EditProfilePicture.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, Image, StyleSheet } from 'react-native';\nimport * as ImagePicker from 'react-native-image-picker';\n\nexport const EditProfilePicture = ({ profileImage, onImageChange }) => {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setSelectedImage(result.assets[0].uri);\n      onImageChange(result.assets[0].uri); // Appeler la fonction pour mettre Ã  jour l'image du profil\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity onPress={pickImage}>\n        <Image\n          source={selectedImage ? { uri: selectedImage } : profileImage}\n          style={styles.profilePic}\n        />\n        <Text style={styles.editLabel}>Modifier</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  // ... vos styles\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAExC,OAAO,KAAKC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAwC;EAAA,IAAlCC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IAAEC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAC9D,IAAAC,SAAA,GAA0Cf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,SAAS;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5B,IAAIC,MAAM,SAASjB,WAAW,CAACkB,uBAAuB,CAAC;QACrDC,UAAU,EAAEnB,WAAW,CAACoB,gBAAgB,CAACC,MAAM;QAC/CC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;MAEF,IAAI,CAACP,MAAM,CAACQ,QAAQ,EAAE;QACpBZ,gBAAgB,CAACI,MAAM,CAACS,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QACtCnB,aAAa,CAACS,MAAM,CAACS,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;MACrC;IACF,CAAC;IAAA,gBAZKb,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYd;EAED,OACE3B,IAAA,CAACP,IAAI;IAACmC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5B7B,KAAA,CAACP,gBAAgB;MAACqC,OAAO,EAAEpB,SAAU;MAAAmB,QAAA,GACnC/B,IAAA,CAACJ,KAAK;QACJqC,MAAM,EAAEvB,aAAa,GAAG;UAAEe,GAAG,EAAEf;QAAc,CAAC,GAAGL,YAAa;QAC9DuB,KAAK,EAAEC,MAAM,CAACK;MAAW,CAC1B,CAAC,EACFlC,IAAA,CAACN,IAAI;QAACkC,KAAK,EAAEC,MAAM,CAACM,SAAU;QAAAJ,QAAA,EAAC;MAAQ,CAAM,CAAC;IAAA,CAC9B;EAAC,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGhC,UAAU,CAACuC,MAAM,CAAC,CAEjC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}