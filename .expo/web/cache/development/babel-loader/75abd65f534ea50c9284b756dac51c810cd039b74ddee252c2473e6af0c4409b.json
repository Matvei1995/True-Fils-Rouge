{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { WelcomeScreen } from \"./components/WelcomScreen\";\nimport { SignInScreen } from \"./components/SignInScreen\";\nimport { SignUpScreen } from \"./components/SignUpScreen\";\nimport { ProfileScreen } from \"./components/ProfileScreen\";\nimport { ConfirmationScreen } from \"./components/ConfirmationScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar styles = StyleSheet.create({\n  defaultText: {\n    fontFamily: 'Rowdies'\n  }\n});\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  useEffect(function () {\n    function loadFonts() {\n      return _loadFonts.apply(this, arguments);\n    }\n    function _loadFonts() {\n      _loadFonts = _asyncToGenerator(function* () {\n        yield Font.loadAsync({\n          'Rowdies': require(\"./assets/fonts/Rowdies-Regular.ttf\")\n        });\n        setFontsLoaded(true);\n      });\n      return _loadFonts.apply(this, arguments);\n    }\n    loadFonts();\n  }, []);\n  if (!fontsLoaded) {\n    return null;\n  }\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    profile = _useState4[0],\n    setProfile = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    articles = _useState6[0],\n    setArticles = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    trades = _useState8[0],\n    setTrades = _useState8[1];\n  useEffect(function () {\n    var fetchProfileData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem('userToken');\n          var response = yield axios.get('http://localhost:5001/api/users/profile', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setProfile(response.data);\n          var articlesResponse = yield axios.get(`http://localhost:5001/api/articles/user/${response.data.id}`);\n          setArticles(articlesResponse.data);\n          var tradesResponse = yield axios.get(`http://localhost:5001/api/trades/user/${response.data.id}`);\n          setTrades(tradesResponse.data);\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données :', error);\n        }\n      });\n      return function fetchProfileData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchProfileData();\n  }, []);\n  return _jsx(NavigationContainer, {\n    screenOptions: {\n      headerShown: false,\n      contentStyle: styles.defaultText\n    },\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Welcome\",\n        component: WelcomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SignInScreen\",\n        component: SignInScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SignUpScreen\",\n        component: SignUpScreen\n      }), _jsx(Stack.Screen, {\n        name: \"ProfileScreen\",\n        profile: profile,\n        articles: articles,\n        trades: trades,\n        component: ProfileScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Confirmation\",\n        component: ConfirmationScreen\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Font","StyleSheet","Text","NavigationContainer","createStackNavigator","WelcomeScreen","SignInScreen","SignUpScreen","ProfileScreen","ConfirmationScreen","jsx","_jsx","jsxs","_jsxs","Stack","styles","create","defaultText","fontFamily","App","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","require","_useState3","_useState4","profile","setProfile","_useState5","_useState6","articles","setArticles","_useState7","_useState8","trades","setTrades","fetchProfileData","_ref","token","AsyncStorage","getItem","response","axios","get","headers","Authorization","data","articlesResponse","id","tradesResponse","error","console","screenOptions","headerShown","contentStyle","children","Navigator","Screen","name","component"],"sources":["/Users/matveitabelev/Desktop/TROQUANTE/MonProjet/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport { StyleSheet, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { WelcomeScreen } from './components/WelcomScreen';\nimport { SignInScreen } from './components/SignInScreen';\nimport { SignUpScreen } from './components/SignUpScreen';\nimport { ProfileScreen } from './components/ProfileScreen';\nimport { ConfirmationScreen } from './components/ConfirmationScreen';\n\n\n\nconst Stack = createStackNavigator();\n\nconst styles = StyleSheet.create({\n  defaultText: {\n    fontFamily: 'Rowdies',\n  },\n});\nexport default function App() {\n\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function loadFonts() {\n      await Font.loadAsync({\n        'Rowdies': require('./assets/fonts/Rowdies-Regular.ttf'), // Chemin vers votre fichier de police\n      });\n      setFontsLoaded(true);\n    }\n\n    loadFonts();\n  }, []);\n\n  if (!fontsLoaded) {\n    return null; \n  }\n\n  const [profile, setProfile] = useState(null);\n  const [articles, setArticles] = useState([]);\n  const [trades, setTrades] = useState([]); // Pour stocker les trocs\n\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const token = await AsyncStorage.getItem('userToken');\n        const response = await axios.get('http://localhost:5001/api/users/profile', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setProfile(response.data);\n\n        // Récupération des articles associés au profil\n        const articlesResponse = await axios.get(`http://localhost:5001/api/articles/user/${response.data.id}`);\n        setArticles(articlesResponse.data);\n\n        // Récupération des trocs passés de l'utilisateur (exemple)\n        const tradesResponse = await axios.get(`http://localhost:5001/api/trades/user/${response.data.id}`);\n        setTrades(tradesResponse.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données :', error);\n      }\n    };\n\n    fetchProfileData();\n  }, []);\n\n\n  return (\n    \n    <NavigationContainer screenOptions={{\n      headerShown: false, // Masquer l'en-tête par défaut de la navigation (optionnel)\n      contentStyle: styles.defaultText // Appliquer le style par défaut au contenu des écrans\n    }}>\n     \n      <Stack.Navigator >\n        <Stack.Screen name=\"Welcome\" component={WelcomeScreen} />\n        <Stack.Screen name=\"SignInScreen\"  component={SignInScreen} />\n        <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n        <Stack.Screen  name=\"ProfileScreen\" profile={profile} articles={articles} trades={trades} component={ProfileScreen}  /> \n        <Stack.Screen name=\"Confirmation\" component={ConfirmationScreen} />\n         \n      </Stack.Navigator>\n   \n     \n    </NavigationContainer>\n    \n  );\n\n\n\n\n  \n\n \n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,KAAKC,IAAI,MAAM,WAAW;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAElC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,aAAa;AACtB,SAASC,YAAY;AACrB,SAASC,YAAY;AACrB,SAASC,aAAa;AACtB,SAASC,kBAAkB;AAA0C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIrE,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AAEpC,IAAMW,MAAM,GAAGd,UAAU,CAACe,MAAM,CAAC;EAC/BC,WAAW,EAAE;IACXC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AACF,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAsCtB,QAAQ,CAAC,KAAK,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElCtB,SAAS,CAAC,YAAM;IAAA,SACC0B,SAASA,CAAA;MAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,WAAA;MAAAA,UAAA,GAAAG,iBAAA,CAAxB,aAA2B;QACzB,MAAM7B,IAAI,CAAC8B,SAAS,CAAC;UACnB,SAAS,EAAEC,OAAO,qCAAqC;QACzD,CAAC,CAAC;QACFP,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC;MAAA,OAAAE,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,IAAAS,UAAA,GAA8BlC,QAAQ,CAAC,IAAI,CAAC;IAAAmC,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAArCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAgCtC,QAAQ,CAAC,EAAE,CAAC;IAAAuC,UAAA,GAAAf,cAAA,CAAAc,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA4B1C,QAAQ,CAAC,EAAE,CAAC;IAAA2C,UAAA,GAAAnB,cAAA,CAAAkB,UAAA;IAAjCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAGxB1C,SAAS,CAAC,YAAM;IACd,IAAM6C,gBAAgB;MAAA,IAAAC,IAAA,GAAAhB,iBAAA,CAAG,aAAY;QACnC,IAAI;UACF,IAAMiB,KAAK,SAASC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;UACrD,IAAMC,QAAQ,SAASC,KAAK,CAACC,GAAG,CAAC,yCAAyC,EAAE;YAC1EC,OAAO,EAAE;cAAEC,aAAa,EAAG,UAASP,KAAM;YAAE;UAC9C,CAAC,CAAC;UACFX,UAAU,CAACc,QAAQ,CAACK,IAAI,CAAC;UAGzB,IAAMC,gBAAgB,SAASL,KAAK,CAACC,GAAG,CAAE,2CAA0CF,QAAQ,CAACK,IAAI,CAACE,EAAG,EAAC,CAAC;UACvGjB,WAAW,CAACgB,gBAAgB,CAACD,IAAI,CAAC;UAGlC,IAAMG,cAAc,SAASP,KAAK,CAACC,GAAG,CAAE,yCAAwCF,QAAQ,CAACK,IAAI,CAACE,EAAG,EAAC,CAAC;UACnGb,SAAS,CAACc,cAAc,CAACH,IAAI,CAAC;QAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;QACtE;MACF,CAAC;MAAA,gBAlBKd,gBAAgBA,CAAA;QAAA,OAAAC,IAAA,CAAAlB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAkBrB;IAEDgB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGN,OAEEjC,IAAA,CAACR,mBAAmB;IAACyD,aAAa,EAAE;MAClCC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE/C,MAAM,CAACE;IACvB,CAAE;IAAA8C,QAAA,EAEAlD,KAAA,CAACC,KAAK,CAACkD,SAAS;MAAAD,QAAA,GACdpD,IAAA,CAACG,KAAK,CAACmD,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAE9D;MAAc,CAAE,CAAC,EACzDM,IAAA,CAACG,KAAK,CAACmD,MAAM;QAACC,IAAI,EAAC,cAAc;QAAEC,SAAS,EAAE7D;MAAa,CAAE,CAAC,EAC9DK,IAAA,CAACG,KAAK,CAACmD,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAE5D;MAAa,CAAE,CAAC,EAC7DI,IAAA,CAACG,KAAK,CAACmD,MAAM;QAAEC,IAAI,EAAC,eAAe;QAAChC,OAAO,EAAEA,OAAQ;QAACI,QAAQ,EAAEA,QAAS;QAACI,MAAM,EAAEA,MAAO;QAACyB,SAAS,EAAE3D;MAAc,CAAG,CAAC,EACvHG,IAAA,CAACG,KAAK,CAACmD,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAE1D;MAAmB,CAAE,CAAC;IAAA,CAEpD;EAAC,CAGC,CAAC;AAU1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}